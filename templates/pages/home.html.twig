{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block body %}
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label == 'error' ? 'danger' : label }} alert-dismissible fade show" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
    {% endfor %}

    <div class="grid gap-5 lg:gap-7.5">
        <!-- begin: grid -->
        <div class="grid lg:grid-cols-5 gap-5 lg:gap-7.5 items-stretch">
            <div class="lg:col-span-2">
                <div class="card h-full bg-success-light">
                    <div class="card-body flex flex-col place-content-center gap-5">
                        <div class="flex justify-center">
                            <img alt="image" class="dark:hidden max-h-[180px]"
                                 src="{{ asset('metronic/media/illustrations/32.svg') }}"/>
                            <img alt="image" class="light:hidden max-h-[180px]"
                                 src="{{ asset('metronic/media/illustrations/32-dark.svg') }}"/>
                        </div>
                        <div class="flex flex-col gap-4">
                            <div class="flex flex-col gap-3 text-center">
                                <h2 class="text-1.5xl font-semibold text-gray-900">
                                    Bienvenue {{ app.user.email }}
                                </h2>
                                <p class="text-sm font-medium text-gray-700">
                                    Vous venez de commencer ou de terminer une lecture ?
                                    <br/>
                                    Faites découvrir les points essentiels à la communauté !
                                </p>
                            </div>
                            <div class="flex justify-center">
                                <a class="btn btn-dark" href="#" data-modal-toggle="#book_modal">
                                    Ajouter une lecture
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="lg:col-span-3">
                {% include 'components/home/booksReading.html.twig' %}
            </div>
        </div>
        <!-- end: grid -->
        <!-- begin: grid -->
        <div class="grid lg:grid-cols-5 gap-5 lg:gap-7.5 items-stretch">
            <div class="lg:col-span-3">
                <div class="grid">
                    {% include 'components/home/booksRead.html.twig' %}
                </div>
            </div>
            <div class="lg:col-span-2">
                <div class="card h-full">
                    <div class="card-body">
                        <div class="flex flex-col gap-5">
                            <div class="flex justify-between items-center">
                                <h3 class="text-xl font-semibold text-gray-900">
                                    Mes statistiques
                                </h3>
                            </div>
                            <div class="flex flex-col gap-4">
                                <div class="flex justify-between items-center">
                                    <span class="text-sm font-medium text-gray-700">Livres lus</span>
                                    <span class="text-sm font-semibold text-gray-900">{{ booksRead|length }}</span>
                                </div>
                                <div id="categoryRadarChart" class="mt-4" style="height: 350px;"></div>
                                <script>
                                document.addEventListener('DOMContentLoaded', function() {
                                    fetch('/api/stats/categories')
                                        .then(response => {
                                            if (!response.ok) {
                                                throw new Error('Erreur réseau: ' + response.statusText);
                                            }
                                            return response.json();
                                        })
                                        .then(data => {
                                            console.log('Données reçues:', data); // Pour debug

                                            if (!data || !data.series || !data.labels || data.error) {
                                                const message = data.error || 'Aucune catégorie de livre terminée';
                                                document.querySelector("#categoryRadarChart").innerHTML = '<p class="text-center text-gray-500">' + message + '</p>';
                                                return;
                                            }

                                            const options = {
                                                series: data.series,
                                                chart: {
                                                    height: 350,
                                                    type: 'radar',
                                                    dropShadow: {
                                                        enabled: true,
                                                        blur: 1,
                                                        left: 1,
                                                        top: 1
                                                    }
                                                },
                                                title: {
                                                    text: 'Livres terminés par catégorie',
                                                    align: 'center',
                                                    style: {
                                                        fontSize: '16px',
                                                        fontWeight: 'bold',
                                                        color: '#263238'
                                                    }
                                                },
                                                stroke: {
                                                    width: 2,
                                                    curve: 'smooth'
                                                },
                                                fill: {
                                                    opacity: 0.25
                                                },
                                                markers: {
                                                    size: 5,
                                                    hover: {
                                                        size: 10
                                                    }
                                                },
                                                labels: data.labels,
                                                plotOptions: {
                                                    radar: {
                                                        size: 140,
                                                        polygons: {
                                                            strokeColors: '#e9e9e9',
                                                            fill: {
                                                                colors: ['#f8f8f8', '#fff']
                                                            }
                                                        }
                                                    }
                                                },
                                                colors: ['#009ef7'],
                                                dataLabels: {
                                                    enabled: true,
                                                    background: {
                                                        enabled: true,
                                                        borderRadius: 2
                                                    }
                                                },
                                                tooltip: {
                                                    y: {
                                                        formatter: function(val) {
                                                            return val + ' livre(s) terminé(s)';
                                                        }
                                                    }
                                                },
                                                xaxis: {
                                                    labels: {
                                                        style: {
                                                            colors: Array(data.labels.length).fill('#a8a8a8'),
                                                            fontSize: '12px',
                                                            fontFamily: 'inherit'
                                                        }
                                                    }
                                                },
                                                yaxis: {
                                                    tickAmount: 4,
                                                    labels: {
                                                        formatter: function(val) {
                                                            return Math.round(val);
                                                        }
                                                    }
                                                }
                                            };

                                            const chart = new ApexCharts(document.querySelector("#categoryRadarChart"), options);
                                            chart.render();
                                        })
                                        .catch(error => {
                                            console.error('Erreur détaillée:', error);
                                            document.querySelector("#categoryRadarChart").innerHTML = '<p class="text-center text-gray-500">Erreur lors du chargement des données</p>';
                                        });
                                });
                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end: grid -->
    </div>
{% endblock %}